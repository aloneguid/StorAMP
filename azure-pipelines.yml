# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/StorAmp.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'
  publishRuntime: 'win10-x86'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

stages:
- stage: Build
  jobs:
  - job: UWP
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: SecureFiles@1
      inputs:
        secureFileName: 'store.pfx'
        outputDirectory: '$(System.DefaultWorkingDirectory)/src/StorAmp.WinStore'
        removeSecureFile: true

    - task: petersendev.dotnet-global-tool-installer.DotnetGlobalToolInstaller.DotnetGlobalToolInstaller@0
      displayName: 'install housework'
      inputs:
        name: housework

    - script: 'housework author src/*.csproj -s build.ini -r'
      displayName: 'author projects'

    - script: 'housework setbuildnumber %Version% -s build.ini'
      displayName: 'set build number'

    - script: 'housework pushvars Version -s build.ini'
      displayName: 'push variables'

    - task: VSBuild@1
      inputs:
        platform: 'x86'
        solution: '$(solution)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

  - job: SingleExe
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        arguments: '-c $(BuildConfiguration) -r $(PublishRuntime) -p:PublishSingleFile=true -o:exepublish'
        zipAfterPublish: false
        workingDirectory: 'src/StorAmp.Wpf'
