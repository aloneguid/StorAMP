# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: 'windows-latest'

variables:
  v: '1.6.2'
  solution: 'src/StorAmp.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'
  publishRuntime: 'win10-x86'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

stages:
- stage: Build
  jobs:
  - job: UWP
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: SecureFiles@1
      inputs:
        secureFileName: 'store.pfx'
        outputDirectory: '$(System.DefaultWorkingDirectory)/src/StorAmp.WinStore'
        removeSecureFile: true

    - task: petersendev.dotnet-global-tool-installer.DotnetGlobalToolInstaller.DotnetGlobalToolInstaller@0
      displayName: 'install housework'
      inputs:
        name: housework

    - task: PowerShell@2
      displayName: 'hw authoring'
      inputs:
        targetType: 'inline'
        script: |
          housework author src/*.csproj -s build.ini -r
          
          housework author src/*.appxmanifest -s build.ini -r -v
          
          housework setbuildnumber %Version% -s build.ini -v

    - task: VSBuild@1
      inputs:
        platform: 'x86'
        solution: '$(solution)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

    - task: CopyFiles@2
      displayName: 'copy generated uwp packages'
      inputs:
        SourceFolder: '$(build.artifactStagingDirectory)/AppxPackages'
        Contents: '*'
        TargetFolder: '$(build.artifactstagingdirectory)/uwp'
        CleanTargetFolder: true
        OverWrite: true
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: 'archive uwp packages'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/uwp'
        ArtifactName: 'uwp'
        publishLocation: 'Container'

  - job: SingleExe
    steps:

    - script: echo ##vso[build.updatebuildnumber]$(v).0

    - task: DotNetCoreCLI@2
      displayName: 'generate .exe'
      inputs:
        command: 'publish'
        publishWebProjects: false
        arguments: '-c $(BuildConfiguration) -r $(PublishRuntime) -p:PublishSingleFile=true -o:exepublish /p:Version=$(v) /p:FileVersion=$(v)'
        zipAfterPublish: false
        workingDirectory: 'src/StorAmp.Wpf'

    - task: CopyFiles@2
      displayName: 'copy generated .exe'
      inputs:
        SourceFolder: 'src/StorAmp.Wpf/exepublish'
        Contents: '*.exe'
        TargetFolder: '$(build.artifactstagingdirectory)/exe'
        CleanTargetFolder: true
        OverWrite: true
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: 'archive .exe'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/exe'
        ArtifactName: 'exe'
        publishLocation: 'Container'

- stage: Release
  dependsOn: ['Build']
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
  #condition: "and( eq(variables['Build.SourceBranch'], 'refs/heads/master'), succeeded('Build') )"
  jobs:
  - deployment: SingleExe
    environment: storamp-live
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'exe'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.ArtifactsDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(System.ArtifactsDirectory)/StorAmp-$(v).zip'
              replaceExistingArchive: true

          - task: AzureFileCopy@3
            inputs:
              SourcePath: '$(System.ArtifactsDirectory)/exe'
              azureSubscription: 'PAYG (personal)'
              Destination: 'AzureBlob'
              storage: 'isolineltd'
              ContainerName: 'storamp'

          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'aloneguid'
              repositoryName: 'aloneguid/StorAMP'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'userSpecifiedTag'
              tag: '$(Build.BuildNumber)'
              assets: '$(System.ArtifactsDirectory)/exe/*'
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'

  - deployment: Store
    environment: storamp-live
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'uwp'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: store-publish@0
            inputs:
              serviceEndpoint: 'UWP'
              appId: '9NKV1D43NLL3'
              packagePath: '$(System.ArtifactsDirectory)/uwp/*.msixupload'
              force: false
              skipPolling: false
          
