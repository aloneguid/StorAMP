<UserControl
    x:Class="StorAmp.Wpf.Wpf.Viewers.VideoViewer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:StorAmp.Wpf.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:StorAmp.Wpf.Wpf.Viewers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.InputBindings>
        <KeyBinding
            Key="Space"
            Command="TogglePlayPause"
            CommandTarget="{Binding ElementName=MediaElement}" />
        <KeyBinding
            Key="F11"
            Command="media:Commands.ToggleFullScreen" />
        <KeyBinding
            Key="Escape"
            Command="media:Commands.EndFullScreen" />
        <KeyBinding
            Key="Left"
            Command="media:Commands.SkipBack"
            CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding
            Command="media:Commands.SkipBack"
            CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding
            Key="Left"
            Command="media:Commands.SkipBack"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}"
            Modifiers="Control" />
        <MouseBinding
            Command="media:Commands.SkipBack"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture
                    Direction="Down"
                    Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding
            Key="Right"
            Command="media:Commands.SkipForward"
            CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding
            Command="media:Commands.SkipForward"
            CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding
            Key="Right"
            Command="media:Commands.SkipForward"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}"
            Modifiers="Control" />
        <MouseBinding
            Command="media:Commands.SkipForward"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture
                    Direction="Up"
                    Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>
    </UserControl.InputBindings>
    <Grid>
        <media:MediaElementWrapper
            x:Name="MediaElement"
            LoadedBehavior="Play"
            ScrubbingEnabled="True"
            Stretch="UniformToFill" />

        <Grid
            VerticalAlignment="Bottom"
            Background="#19000000">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Slider
                x:Name="ProgressSlider"
                Grid.Row="0"
                media:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
                Maximum="{Binding ElementName=MediaElement, Path=Length, Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}"
                Minimum="0"
                Style="{StaticResource {x:Static media:Styles.ProgressSliderStyleKey}}"
                Value="{Binding ElementName=MediaElement, Path=Position, Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}" />

            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style
                        BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}"
                        TargetType="{x:Type Button}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ToggleButton
                    x:Name="PlayPauseButton"
                    Grid.Column="0"
                    IsChecked="{Binding ElementName=MediaElement, Path=IsPlaying}"
                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <ToggleButton.Style>
                        <Style
                            BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}"
                            TargetType="{x:Type ToggleButton}">
                            <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PauseGeometryKey}}" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PlayGeometryKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton
                    x:Name="ToggleMutedButton"
                    Grid.Column="1"
                    IsChecked="{Binding ElementName=MediaElement, Path=IsMuted}"
                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <ToggleButton.Style>
                        <Style
                            BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}"
                            TargetType="{x:Type ToggleButton}">
                            <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.MuteGeometryKey}}" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.UnMuteGeometryKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <TextBlock
                    x:Name="ProgressTextBlock"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Foreground="{Binding ElementName=ToggleMutedButton, Path=Foreground}"
                    Opacity="{Binding ElementName=ToggleMutedButton, Path=Opacity}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} / {1}">
                            <Binding
                                Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                ElementName="MediaElement"
                                Path="Position" />
                            <Binding
                                Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                ElementName="MediaElement"
                                Path="Length" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
